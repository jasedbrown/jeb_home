#!/bin/bash

# Check if an output filename is provided
if [ $# -eq 0 ]; then
    echo "Usage: $0 <output_filename>"
    exit 1
fi

# Get the output filename from the argument
OUTPUT_FILENAME=$1

# Create the output directory with today's date
OUTPUT_DIR=~/Documents/flamegraphs/$(date +%Y-%m-%d)
mkdir -p "$OUTPUT_DIR"

# Find the PID for ReadySet upstream process
PID=$(ps -ef | grep readyset | grep upstream | awk '{print $2}')

# Check if PID is found
if [ -z "$PID" ]; then
    echo "No ReadySet upstream process found"
    exit 1
fi

echo "addr2line: $(which addr2line)"

# Full paths for output
PERF_DATA_PATH="/tmp/perf.data"
FOLDED_DATA_PATH="/tmp/stacks.folded"
FULL_OUTPUT_PATH="${OUTPUT_DIR}/${OUTPUT_FILENAME}.svg"

# As per https://github.com/flamegraph-rs/flamegraph?tab=readme-ov-file#enabling-perf-for-use-by-unprivileged-users,
# lower the perf_event_paranoid value.
echo -1 | sudo sh -c 'cat > /proc/sys/kernel/perf_event_paranoid'

# Collect perf data for some number of seconds
echo "Starting perf collection for PID $PID"
sudo perf record -F 99 -p "$PID" --call-graph "dwarf,16384" -g -o $PERF_DATA_PATH -- sleep 7
sudo chmod 777 $PERF_DATA_PATH

# Fold the stacks
# perf version 6.12, you can use an alternative addr2line tool (by using perf script --addr2line=/path/to/addr2line).
# sadly, ubuntu 22.04 only supports up to perf v6.9
echo "Folding stacks"
perf script -i $PERF_DATA_PATH | inferno-collapse-perf > $FOLDED_DATA_PATH

# Generate flamegraph from perf data
echo "Generating flamegraph"
cat $FOLDED_DATA_PATH | inferno-flamegraph > $FULL_OUTPUT_PATH

echo "Flamegraph generated at $FULL_OUTPUT_PATH"
