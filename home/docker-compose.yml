services:
  ##############################
  ## databases
  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=noria
      - MYSQL_DATABASE=noria
      - MYSQL_SSL_CA=/usr/local/share/ca-certificates/rootCA.crt
      - MYSQL_SSL_CERT=/certs/mysql.local+2.pem
      - MYSQL_SSL_KEY=/certs/mysql.local+2-key.pem
    ports:
     - '3306:3306'
    volumes:
      - /var/lib/docker-data/mysql:/var/lib/mysql
      - /var/lib/docker-data/certs/mysql:/certs
      - ~/.local/share/mkcert/rootCA.pem:/usr/local/share/ca-certificates/rootCA.crt:ro
    entrypoint: >
      sh -c "microdnf install -y ca-certificates &&
             update-ca-trust &&
             chown -R mysql:mysql /certs &&
             docker-entrypoint.sh mysqld"

  ## standard postgres
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_PASSWORD=noria
      - POSTGRES_DB=noria
    ports:
      - '5432:5432'
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
    volumes:
      - /var/lib/docker-data/postgres:/var/lib/postgresql/data

  ## pg with pgvector extension
  pgvector:
    image: pgvector/pgvector:pg16
    container_name: pgvector
    environment:
      - POSTGRES_PASSWORD=noria
      - POSTGRES_DB=noria
    ports:
      - '5442:5432'
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
    volumes:
      - /var/lib/docker-data/postgres:/var/lib/pgvector/data


  ##############################
  consul-server:
    image: hashicorp/consul:latest
    ports:
      - '8500:8500'     # consul web ui
      - '8600:8600/tcp'  
      - '8600:8600/udp'
    volumes:
      - ./consul/server.json:/consul/config/server.json:ro
      - /var/lib/docker-data/consul:/consul/data
    command: 'agent -bootstrap-expect=1'

  
  ##############################
  ## metrics, metrics everywhere
  prometheus:
    image: prom/prometheus:latest
    network_mode: "host"
    volumes:
      - ./prometheus/prometheus-laptop.yml:/etc/prometheus/prometheus.yml
      - /var/lib/docker-data/prometheus:/var/lib/prometheus
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "9090"]
      interval: 10s
      timeout: 2s
      retries: 5
      start_period: 5s

  grafana:
    image: 
    pull_policy: always
    network_mode: "host"
    environment:
      RS_DB_TYPE: mysql
      RS_HOST: host.docker.internal
      RS_USER: root
      RS_PASS: noria
      RS_PORT: 3307
      RS_DB_NAME: noria
      GRAFANA_HTTP_PORT: 4000
    # volumes:
    #   - ./grafana/dashboards:/var/lib/grafana/dashboards
    #   - ./grafana/provisioning:/etc/grafana/provisioning
    #   - ./grafana/config:/etc/grafana

      
  ##############################
  ## metrics exporters
#   postgres_exporter:
#     # https://github.com/prometheus-community/postgres_exporter
#     # defaults to port 9187
#     image: prometheuscommunity/postgres-exporter
#     network_mode: "host"
#     environment:
#       - DATA_SOURCE_URI=0.0.0.0:5432?sslmode=disable
#       - DATA_SOURCE_USER=postgres
#       - DATA_SOURCE_PASS=readyset

  pushgateway:
    # allows ephemeral and batch jobs to expose their metrics to Prometheus
    # https://github.com/prometheus/pushgateway
    # defaults to port 9091
    image: prom/pushgateway
    ports:
      - '9091:9091'

  node_exporter:
    # exporter for hardware and OS metrics exposed by *NIX kernels
    # https://github.com/prometheus/node_exporter
    # https://prometheus.io/docs/guides/node-exporter/
    # wicked awesome grafana dashboard: https://grafana.com/grafana/dashboards/1860-node-exporter-full/
    # default port of 9100
    image: prom/node-exporter:latest
    command:
      - '--path.rootfs=/host'
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'

